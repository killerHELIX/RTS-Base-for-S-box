@using Sandbox;
@using Sandbox.UI;
@using Sandbox.Network;
@using System.Linq;
@using System;
@using System.Threading.Tasks;
@inherits PanelComponent
@attribute [StyleSheet]

@code
{

	protected override void OnStart()
	{
		if (!MainMenuComponent.Local.joinedGame && Networking.IsHost)
		{
			LoadingScreen.Title = "Creating Lobby";
			//await Task.DelayRealtimeSeconds(0.1f);
			GameNetworkSystem.CreateLobby();
		}
		else
		{
			Log.Info("I have joined a game already");
			MainMenuComponent.Local.joinedGame = true;
		}
	}

	public void startGame()
	{
		if (Networking.IsHost)
		{
			GameState.Local.startGame();
		}
	}

	public void copyIDToClipboard()
	{
		Log.Info(MainMenuComponent.Local.MyServID.ToString());
		Clipboard.SetText(MainMenuComponent.Local.MyServID.ToString());
		return;
	}

	public void returnToMain()
	{
		MainMenuComponent.Local.joinedGame = false;
		MainMenuComponent.Local.setActivePanel(MainMenuComponent.MenuPanelType.MAIN);
		GameNetworkSystem.Disconnect();
	}

	public void setTeamRequest(GameState.PlayerType newType)
	{
		/*if(Network.OwnerConnection != null)
		{
			if (Network.OwnerConnection.DisplayName != null)
			{
				GameState.Local.addPlayerToList(Network.OwnerConnection.DisplayName, newType, true);
			}
			else
			{
				Log.Info("Cannot find Local connection display name!");
			}
		}
		else
		{
			Log.Info("Cannot find Local connection!");
		}*/

		if (Connection.Local != null)
		{
			if (Connection.Local.DisplayName != null)
			{
				GameState.Local.addPlayerToList(Connection.Local.DisplayName, newType, true);
			}
			else
			{
				Log.Info("Cannot find Local connection display name!");
			}
		}
		else
		{
			Log.Info("Cannot find Local connection!");
		}
	}
}

<root>
	<div class="ServerIDControlsPanel">
		<div class="ServerIDPanel">Lobby ID: @(MainMenuComponent.Local.MyServID)</div>
		<button @onclick="@(() => copyIDToClipboard())" class="IDCopyButton">Copy To Clipboard</button>
	</div>
	<div class="PlayerTeamSelectionPanel">
		<div class="PlayerColumn">
			<div class="PlayerLabel">Vacumaster</div>
			<div @onclick="@(() => setTeamRequest(GameState.PlayerType.RTS))" class="RTSPlayerPanel">
				@foreach (string player in GameState.Local.rtsPlayerList)
				{
					<div class="PlayerListItem">@(player)</div>
				}
			</div>
		</div>
		<div class="PlayerColumn">
			<div class="PlayerLabel">Spectator</div>
			<div @onclick="@(() => setTeamRequest(GameState.PlayerType.SPECTATOR))" class="SpectatorPlayerPanel">
				@foreach (string player in GameState.Local.spectatorPlayerList)
				{
					<div class="PlayerListItem">@(player)</div>
				}
			</div>
		</div>
		<div class="PlayerColumn">
			<div class="PlayerLabel">Survivors</div>
			<div @onclick="@(() => setTeamRequest(GameState.PlayerType.SURVIVOR))" class="SurvivorPlayerPanel">
				@foreach (string player in GameState.Local.survivorPlayerList)
				{
					<div class="PlayerListItem">@(player)</div>
				}
			</div>
		</div>
	</div>
	<div class="ServerControlsPanel">
		<button class="ServerControlOption" @onclick="@(() => returnToMain())">Back</button>
		<button class="ServerControlOption" @onclick="@(() => startGame())">Start</button>
	</div>
</root>